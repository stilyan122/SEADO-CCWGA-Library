name: CI/CD on Library App

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch: 

jobs:
  npm_config:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout of the repo
      uses: actions/checkout@v4

    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm install

  run_be:
    runs-on: ubuntu-latest
    needs: npm_config
    steps:
    - name: Run server script
      run: npm run start-server &

  run_fe:
    runs-on: ubuntu-latest
    needs: run_be
    steps:
    - name: Run app
      run: npm run start &

  ui_tests:
    runs-on: ubuntu-latest
    needs: run_fe
    steps:
    - name: Download playwright
      run: npx playwright install 
    - name: Run UI playwright tests
      run: npm run ui &
  
  deploy-backend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: ui_tests
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: Deploy backend
        uses: JorgeLNJunior/render-deploy@v1.4.4
        with:
          service_id: ${{ secrets.BACKEND_API_KEY }}
          api_key: ${{ secrets.MY_RENDER_SERVICE_ID }}
          clear_cache: true
          wait_deploy: true
          github_token: ${{ secrets.TOKEN_GH }}

  deploy-frontend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: deploy-backend
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: Deploy backend
        uses: JorgeLNJunior/render-deploy@v1.4.4
        with:
          service_id: ${{ secrets.FRONTEND_API_KEY }}
          api_key: ${{ secrets.MY_RENDER_SERVICE_ID }}
          clear_cache: true
          wait_deploy: true
          github_token: ${{ secrets.TOKEN_GH }}